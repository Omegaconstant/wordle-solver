{"ast":null,"code":"var _jsxFileName = \"/home/janmenjaya/resume/project/wordle-solver/src/components/letterGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Keyboard from './keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createInitialGrid = (rows, cols) => {\n  const grid = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(['gray', '']);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\nconst LetterGrid = ({\n  handleWordData\n}) => {\n  _s();\n  const rows = 6;\n  const cols = 5;\n  const [grid, setGrid] = useState(createInitialGrid(rows, cols));\n  var curRow = 0,\n    curCol = -1;\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n  }, []);\n  const handleKeyPress = event => {\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\n      curCol = Math.min(curCol + 1, cols - 1);\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][curCol][1] = event.key;\n        return newGrid;\n      });\n    } else if (event.keyCode === 8) {\n      if (curCol < 0) return;\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][curCol][1] = '';\n        curCol = Math.max(curCol - 1, -1);\n        return newGrid;\n      });\n    } else if (event.keyCode === 13) {\n      var ok = 1;\n      for (let i = 0; i < cols; i++) {\n        if (grid[curRow][i][1] === '') ok = 0;\n      }\n      if (!ok) return;\n      const rowNow = curRow;\n      curRow = Math.min(curRow + 1, rows - 1);\n      curCol = -1;\n      const wordData = [];\n      for (let i = 0; i < cols; i++) {\n        if (grid[rowNow][i][0] === 'green') {\n          if (rowNow + 1 < rows) {\n            setGrid(prevGrid => {\n              const newGrid = [...prevGrid];\n              newGrid[rowNow + 1][i] = newGrid[rowNow][i];\n              return newGrid;\n            });\n          }\n        }\n        wordData.push(grid[rowNow][i]);\n      }\n      handleWordData(wordData);\n    } else if (event.key === 'green') {\n      const colNow = Math.max(curCol, 0);\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][colNow][0] = event.key;\n        return newGrid;\n      });\n    } else if (event.key === 'yellow') {\n      const colNow = Math.max(curCol, 0);\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][colNow][0] = event.key;\n        return newGrid;\n      });\n    } else if (event.key === 'gray') {\n      const colNow = Math.max(curCol, 0);\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][colNow][0] = event.key;\n        return newGrid;\n      });\n    }\n  };\n  const handleColorChange = (rowIndex, colIndex) => {\n    setGrid(prevGrid => {\n      const newGrid = [...prevGrid];\n      if (newGrid[rowIndex][colIndex][0] === 'gray') {\n        newGrid[rowIndex][colIndex][0] = 'yellow';\n      } else if (newGrid[rowIndex][colIndex][0] === 'yellow') {\n        newGrid[rowIndex][colIndex][0] = 'green';\n      } else if (newGrid[rowIndex][colIndex][0] === 'green') {\n        newGrid[rowIndex][colIndex][0] = 'gray';\n      }\n      return newGrid;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-rows-6 gap-1 min-w-[17rem]\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleColorChange(rowIndex, colIndex),\n          style: {\n            'backgroundColor': cell[0] === 'white' ? 'white' : cell[0] === 'gray' ? '#9CA3AF' : cell[0] === 'yellow' ? '#FDE047' : '#4ADE80',\n            'height': '3rem',\n            'width': '3rem',\n            'textAlign': 'center',\n            'borderWidth': '1px',\n            'borderColor': 'black',\n            'borderStyle': 'solid',\n            'borderRadius': '0.25rem',\n            'marginLeft': '0.150rem',\n            'marginRight': '0.150rem',\n            'textTransform': 'uppercase',\n            'padding': '0.5rem'\n          },\n          children: cell[1]\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(LetterGrid, \"oigHHK/6WeS8RfNO85clXRX4UDk=\");\n_c = LetterGrid;\nexport default LetterGrid;\nvar _c;\n$RefreshReg$(_c, \"LetterGrid\");","map":{"version":3,"names":["React","useState","useEffect","Keyboard","jsxDEV","_jsxDEV","createInitialGrid","rows","cols","grid","i","row","j","push","LetterGrid","handleWordData","_s","setGrid","curRow","curCol","window","addEventListener","handleKeyPress","event","keyCode","Math","min","prevGrid","newGrid","key","max","ok","rowNow","wordData","colNow","handleColorChange","rowIndex","colIndex","className","children","map","cell","onClick","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/janmenjaya/resume/project/wordle-solver/src/components/letterGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Keyboard from './keyboard';\n\nconst createInitialGrid = (rows, cols) => {\n  const grid = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(['gray', ''])\n    }\n    grid.push(row)\n  }\n  return grid;\n};\n\n\nconst LetterGrid = ({ handleWordData }) => {\n  const rows = 6;\n  const cols = 5;\n\n  const [grid, setGrid] = useState(createInitialGrid(rows, cols));\n  var curRow = 0, curCol = -1;\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n  }, [])\n\n\n  const handleKeyPress = (event) => {\n\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\n      curCol = (Math.min(curCol + 1, cols - 1));\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][curCol][1] = event.key;\n        return newGrid;\n      });\n    }\n\n    else if (event.keyCode === 8) {\n      if (curCol < 0) return;\n\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][curCol][1] = '';\n        curCol = (Math.max(curCol - 1, -1));\n        return newGrid;\n      });\n    }\n    \n    else if (event.keyCode === 13) {\n      var ok = 1;\n      for (let i = 0; i < cols; i++) {\n        if (grid[curRow][i][1] === '') ok = 0;\n      }\n      if (!ok) return;\n\n      const rowNow = curRow;\n      curRow=(Math.min(curRow + 1, rows - 1));\n      curCol=(-1);\n\n      const wordData = []\n      for (let i = 0; i < cols; i++) {\n        if (grid[rowNow][i][0] === 'green') {\n          if (rowNow + 1 < rows) {\n            setGrid(prevGrid => {\n              const newGrid = [...prevGrid];\n              newGrid[rowNow + 1][i] = newGrid[rowNow][i];\n              return newGrid;\n            });\n\n          }\n        }\n        wordData.push(grid[rowNow][i]);\n      }\n\n      handleWordData(wordData);\n    }\n\n    else if(event.key==='green'){\n      const colNow=Math.max(curCol,0);\n\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][colNow][0] = event.key;\n        return newGrid;\n      });\n    }\n\n    else if(event.key==='yellow'){\n      const colNow=Math.max(curCol,0);\n\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][colNow][0] = event.key;\n        return newGrid;\n      });\n    }\n\n    else if(event.key==='gray'){\n      const colNow=Math.max(curCol,0);\n\n      setGrid(prevGrid => {\n        const newGrid = [...prevGrid];\n        newGrid[curRow][colNow][0] = event.key;\n        return newGrid;\n      });\n    }\n  }\n\n  const handleColorChange = (rowIndex, colIndex) => {\n    setGrid(prevGrid => {\n      const newGrid = [...prevGrid];\n\n      if (newGrid[rowIndex][colIndex][0] === 'gray') {\n        newGrid[rowIndex][colIndex][0] = 'yellow';\n      }\n      else if (newGrid[rowIndex][colIndex][0] === 'yellow') {\n        newGrid[rowIndex][colIndex][0] = 'green';\n      }\n      else if (newGrid[rowIndex][colIndex][0] === 'green') {\n        newGrid[rowIndex][colIndex][0] = 'gray';\n      }\n      return newGrid;\n    });\n  }\n\n  return (\n    <div className='flex flex-col items-center gap-3'>\n      <div className=\"grid grid-rows-6 gap-1 min-w-[17rem]\">\n        {grid.map((row, rowIndex) => (\n          <div key={rowIndex} className='flex flex-row'>\n            {row.map((cell, colIndex) => (\n              <div\n                key={colIndex}\n                onClick={() => handleColorChange(rowIndex, colIndex)}\n                style={{\n                  'backgroundColor': (cell[0] === 'white') ? 'white' : (cell[0] === 'gray') ? '#9CA3AF' : (cell[0] === 'yellow') ? '#FDE047' : '#4ADE80',\n                  'height': '3rem',\n                  'width': '3rem',\n                  'textAlign': 'center',\n                  'borderWidth': '1px',\n                  'borderColor': 'black',\n                  'borderStyle': 'solid',\n                  'borderRadius': '0.25rem',\n                  'marginLeft': '0.150rem',\n                  'marginRight': '0.150rem',\n                  'textTransform': 'uppercase',\n                  'padding': '0.5rem'\n                }}\n              >{cell[1]}</div>\n            ))}\n          </div>\n        ))}\n\n      </div>\n      <Keyboard  />\n    </div>\n  );\n};\n\nexport default LetterGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}